[{"/home/localhost/Documents/Code/invest-track/src/index.js":"1","/home/localhost/Documents/Code/invest-track/src/screens/Home/index.js":"2","/home/localhost/Documents/Code/invest-track/src/screens/About/index.js":"3","/home/localhost/Documents/Code/invest-track/src/components/AppForm.js":"4","/home/localhost/Documents/Code/invest-track/src/screens/Login/index.js":"5","/home/localhost/Documents/Code/invest-track/src/store/index.js":"6","/home/localhost/Documents/Code/invest-track/src/store/actions/alert.js":"7","/home/localhost/Documents/Code/invest-track/src/store/reducers/index.js":"8","/home/localhost/Documents/Code/invest-track/src/store/types.js":"9","/home/localhost/Documents/Code/invest-track/src/store/reducers/alert.js":"10","/home/localhost/Documents/Code/invest-track/src/store/reducers/stocks.js":"11","/home/localhost/Documents/Code/invest-track/src/store/actions/stocks.js":"12","/home/localhost/Documents/Code/invest-track/src/store/api/index.js":"13","/home/localhost/Documents/Code/invest-track/src/store/actions/auth.js":"14","/home/localhost/Documents/Code/invest-track/src/store/reducers/auth.js":"15","/home/localhost/Documents/Code/invest-track/src/components/ProtectedRoute.js":"16","/home/localhost/Documents/Code/invest-track/src/screens/NotFound/index.js":"17","/home/localhost/Documents/Code/invest-track/src/App/index.js":"18","/home/localhost/Documents/Code/invest-track/src/firebase.js":"19","/home/localhost/Documents/Code/invest-track/src/components/AppList/index.js":"20","/home/localhost/Documents/Code/invest-track/src/components/Navbar/index.js":"21","/home/localhost/Documents/Code/invest-track/src/components/AppLoader/index.js":"22","/home/localhost/Documents/Code/invest-track/src/components/AppAlert/index.js":"23"},{"size":577,"mtime":1612721696362,"results":"24","hashOfConfig":"25"},{"size":1881,"mtime":1612732966740,"results":"26","hashOfConfig":"25"},{"size":337,"mtime":1612291202401,"results":"27","hashOfConfig":"25"},{"size":1407,"mtime":1612729540800,"results":"28","hashOfConfig":"25"},{"size":5596,"mtime":1612725431374,"results":"29","hashOfConfig":"25"},{"size":285,"mtime":1612289997641,"results":"30","hashOfConfig":"25"},{"size":283,"mtime":1612289635567,"results":"31","hashOfConfig":"25"},{"size":221,"mtime":1612298307076,"results":"32","hashOfConfig":"25"},{"size":628,"mtime":1612645899858,"results":"33","hashOfConfig":"25"},{"size":422,"mtime":1612210282497,"results":"34","hashOfConfig":"25"},{"size":684,"mtime":1612293895353,"results":"35","hashOfConfig":"25"},{"size":1174,"mtime":1612296520450,"results":"36","hashOfConfig":"25"},{"size":549,"mtime":1612296422570,"results":"37","hashOfConfig":"25"},{"size":3676,"mtime":1612647239513,"results":"38","hashOfConfig":"25"},{"size":1171,"mtime":1612646883523,"results":"39","hashOfConfig":"25"},{"size":1262,"mtime":1612727938240,"results":"40","hashOfConfig":"25"},{"size":189,"mtime":1612378459517,"results":"41","hashOfConfig":"25"},{"size":996,"mtime":1612717503866,"results":"42","hashOfConfig":"25"},{"size":600,"mtime":1612207755746,"results":"43","hashOfConfig":"25"},{"size":1142,"mtime":1612634261674,"results":"44","hashOfConfig":"25"},{"size":2169,"mtime":1612728065708,"results":"45","hashOfConfig":"25"},{"size":281,"mtime":1612726546358,"results":"46","hashOfConfig":"25"},{"size":960,"mtime":1612717630207,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"185gpa5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/localhost/Documents/Code/invest-track/src/index.js",[],["98","99"],"/home/localhost/Documents/Code/invest-track/src/screens/Home/index.js",["100","101"],"/home/localhost/Documents/Code/invest-track/src/screens/About/index.js",[],"/home/localhost/Documents/Code/invest-track/src/components/AppForm.js",[],"/home/localhost/Documents/Code/invest-track/src/screens/Login/index.js",["102"],"import {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect, useHistory} from \"react-router-dom\";\n\n/** COMPONENTS**/\nimport Typewriter from 'typewriter-effect';\nimport { auth } from \"../../firebase\";\nimport { AppLoader } from \"../../components/AppLoader\";\n\n/** ACTIONS **/\nimport { setLoading, setUser, signIn, signUp, setEmail, setPassword, setAccount, clearInputs } from \"../../store/actions/auth\";\n\n\nimport './styles.scss';\n\n\nexport const Login = (props) => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const {loading, user, email, password, emailError, passwordError, hasAccount} = useSelector(state => {\n        const auth = state.auth;\n\n        return {\n            user: auth.user,\n            email: auth.email,\n            password: auth.password,\n            emailError: auth.emailError,\n            passwordError: auth.passwordError,\n            hasAccount: auth.hasAccount,\n            loading: auth.loading\n        }\n    })\n\n    // console.log('user', user)\n    // console.log('password', password)\n    // console.log('emailError', emailError)\n    // console.log(' passwordError ',  passwordError)\n    // console.log('hasAccount',hasAccount)\n\n\n    const authListener = () => {\n        auth.onAuthStateChanged(user => {\n            if(user){\n                // console.log('user', user)\n                dispatch(clearInputs());\n                dispatch(setUser(user));\n            }else{\n                dispatch(setUser(''));\n            }\n            dispatch(setLoading(false))\n        })\n    }\n\n    useEffect(() => {\n        authListener()\n    }, [])\n\n\n    console.log('history', history)\n\n    if(user) {\n        const { from } = history.location.state || { from: { pathname: '/' } }\n\n        return <Redirect to={from} />\n    }\n\n    return(\n        <div className=\"login-page\">\n            <div className=\"login-page__logo app-logo\">\n                <Typewriter\n                    onInit={(typewriter) => {\n                        typewriter.typeString('<strong style=\"font-size: 3.9rem; text-align: left\">Hello! it\\'s </strong>')\n                            .pauseFor(400)\n                            .deleteAll(20)\n                            .typeString('<strong class=\"mx-auto\" >Invest Track</strong>')\n                            .start();\n                    }}\n                    options={{\n                        delay: 30,\n                    }}\n                />\n            </div>\n\n            <div className=\"login-page__form app-form\">\n                    <div className=\"app-form__header\">{hasAccount ? 'Sign In' : 'Sign Up'}</div>\n                    <div className=\"app-form__body\">\n                        <div className=\"app-form__input app-input\">\n                            <input\n                                type=\"email\"\n                                id=\"inputEmail\"\n                                className={`app-input__input ${emailError && 'app-input__input_error'}`}\n                                placeholder=\"Email address\"\n                                required\n                                autoFocus\n                                value={email}\n                                onChange={e => dispatch(setEmail(e.target.value))}\n                            />\n                            <label\n                                className=\"app-input__label\"\n                                htmlFor=\"inputEmail\"\n                            >Email address</label>\n                            <p className=\"app-input__error-message\">{emailError}</p>\n                        </div>\n                        <div className=\"app-form__input app-input\">\n                            <input\n                                type=\"password\"\n                                id=\"inputPassword\"\n                                className={`app-input__input ${passwordError && 'error'}`}\n                                placeholder=\"Password\"\n                                required\n                                value={password}\n                                onChange={e => dispatch(setPassword(e.target.value))}\n                            />\n                            <label\n                                className=\"app-input__label\"\n                                htmlFor=\"inputPassword\"\n                            >Password</label>\n                            <p className=\"app-input__error-message\">{passwordError}</p>\n                        </div>\n                        <button\n                            className=\"app-button\"\n                            onClick={hasAccount ?\n                                () => { dispatch(signIn({email, password}))} :\n                                () => dispatch(signUp({email, password}))\n                            }\n                        >\n                            {hasAccount ? 'Sign in' : 'Sign up'}\n                            {loading && <AppLoader/>}\n                        </button>\n                    </div>\n                    <div className=\"app-form__footer \">\n                        {hasAccount ? 'Don\\'t have an account?' : 'Have an account?'}\n                        <label\n                            className=\"app-form__footer-btn\"\n                            onClick={() => dispatch(setAccount(!hasAccount))}\n                        >\n                            {hasAccount ? 'Sing up' : 'Sign in'}\n                        </label>\n                    </div>\n                </div>\n        </div>\n    )\n}","/home/localhost/Documents/Code/invest-track/src/store/index.js",[],"/home/localhost/Documents/Code/invest-track/src/store/actions/alert.js",[],"/home/localhost/Documents/Code/invest-track/src/store/reducers/index.js",[],"/home/localhost/Documents/Code/invest-track/src/store/types.js",[],"/home/localhost/Documents/Code/invest-track/src/store/reducers/alert.js",[],"/home/localhost/Documents/Code/invest-track/src/store/reducers/stocks.js",[],"/home/localhost/Documents/Code/invest-track/src/store/actions/stocks.js",[],"/home/localhost/Documents/Code/invest-track/src/store/api/index.js",[],"/home/localhost/Documents/Code/invest-track/src/store/actions/auth.js",["103"],"import {\n    SET_LOADING,\n    SET_USER,\n    SET_EMAIL,\n    SET_PASSWORD,\n    CLEAR_INPUTS,\n    CLEAR_ERRORS,\n    EMAIL_ERROR,\n    PASSWORD_ERROR,\n    GET_STOCKS,\n    REMOVE_STOCK,\n    SHOW_LOADER,\n    SET_ACCOUNT\n} from \"../types\";\nimport { getRequest, postRequest, deleteRequest} from \"../api\";\nimport {auth} from \"../../firebase\";\n\nconst url = process.env.REACT_APP_DB_URL;\n\nexport const showLoader = () => ({type: SHOW_LOADER});\n\nexport const getAll = () => async dispatch => {\n\n    dispatch(showLoader());\n\n    const data = await getRequest(`${url}/stocks.json`);\n\n    const payload = Object.keys(data).map(key => ({\n        ...data[key],\n        id: key\n    }))\n\n    dispatch({\n        type: GET_STOCKS,\n        payload\n    })\n};\n// export const add = title => async dispatch => {\n//     const stock = {\n//         title, date: new Date().toJSON()\n//     }\n//     try{\n//         const data = await postRequest({\n//             url: `${url}/stocks.json`,\n//             stock\n//         })\n//\n//         const payload = {\n//             ...stock,\n//             id: data.name\n//         };\n//\n//         dispatch({\n//             type: ADD_STOCK,\n//             payload\n//         })\n//\n//     }catch (e) {\n//         throw new Error(e.message)\n//     }\n// };\nexport const remove = id => async dispatch => {\n    await deleteRequest(`${url}/stocks/${id}.json`);\n    dispatch({\n        type: REMOVE_STOCK,\n        payload: id\n    })\n}\n\nexport const setLoading = (status) => ({\n    type: SET_LOADING,\n    payload: status\n})\n\nexport const setAccount = (account) => ({\n    type: SET_ACCOUNT,\n    payload: account\n});\n\nexport const setUser = (user) => ({\n    type: SET_USER,\n    payload: user\n});\n\nexport const setEmail = (email) => {\n    return{\n        type: SET_EMAIL,\n        payload: email\n    }\n};\n\nexport const setPassword = (password) => ({\n    type: SET_PASSWORD,\n    payload: password\n});\n\nexport const clearInputs = () => ({\n    type: CLEAR_INPUTS\n});\n\nexport const clearErrors = () => ({\n    type: CLEAR_ERRORS\n});\n\nconst emailError = (msg) => ({\n    type: EMAIL_ERROR,\n    payload: msg\n})\n\nconst passwordError = (msg) => ({\n    type: PASSWORD_ERROR,\n    payload: msg\n})\n\nexport const signIn = ({email, password}) => dispatch => {\n    dispatch(clearErrors());\n    dispatch(setLoading(true));\n    auth.signInWithEmailAndPassword(email, password)\n        .catch(error => {\n            switch (error.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                    dispatch(emailError(error.message));\n                    break;\n                case \"auth/wrong-password\":\n                    dispatch(passwordError(error.message));\n                    break;\n                default:\n            }\n            dispatch(setLoading(false))\n        })\n\n}\n\nexport const signUp = ({email, password}) => dispatch => {\n    dispatch(clearErrors());\n    dispatch(setLoading());\n    dispatch(setLoading(true))\n    auth.createUserWithEmailAndPassword(email, password)\n        .catch(error => {\n            console.log(error.code)\n            switch (error.code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                    dispatch(emailError(error.message));\n                    break;\n                case \"auth/weak-password\":\n                    dispatch(passwordError(error.message));\n                    break;\n                default:\n            }\n            dispatch(setLoading(false))\n        })\n}\n\nexport const logOut = () => {\n    auth.signOut()\n        .catch((error) => {\n            console.log(error)\n        });\n}","/home/localhost/Documents/Code/invest-track/src/store/reducers/auth.js",[],"/home/localhost/Documents/Code/invest-track/src/components/ProtectedRoute.js",[],"/home/localhost/Documents/Code/invest-track/src/screens/NotFound/index.js",[],"/home/localhost/Documents/Code/invest-track/src/App/index.js",[],"/home/localhost/Documents/Code/invest-track/src/firebase.js",[],"/home/localhost/Documents/Code/invest-track/src/components/AppList/index.js",[],"/home/localhost/Documents/Code/invest-track/src/components/Navbar/index.js",["104"],"import { NavLink } from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { logOut } from \"../../store/actions/auth\";\n\nimport \"./styles.scss\";\n\nexport const Navbar = () => {\n\n    const user = useSelector(state => state.auth.user)\n\n    return (\n        <nav className=\"app-navbar\">\n            <div className=\"app-navbar__logo\">\n                Invest track\n            </div>\n            <ul className=\"app-navbar__menu\">\n                <li className=\"app-navbar__item\">\n                    <NavLink\n                        className=\"app-navbar__button\"\n                        activeClassName=\"app-navbar__button-active\"\n                        to=\"/about\"\n                        exact\n                    > About\n                    </NavLink>\n                </li>\n                {user && <li className=\"app-navbar__item\">\n                    <NavLink\n                        className=\"app-navbar__button\"\n                        activeClassName=\"app-navbar__button-active\"\n                        to=\"/\"\n                        exact\n                    > Home\n                    </NavLink>\n                </li>}\n                {user && <li className=\"app-navbar__item\">\n                    <NavLink\n                        className=\"app-navbar__button\"\n                        activeClassName=\"app-navbar__button-active\"\n                        to=\"/overview\"\n                    > Summary\n                    </NavLink>\n                </li>}\n                {user && <li className=\"app-navbar__item\">\n                    <NavLink\n                        className=\"app-navbar__button\"\n                        activeClassName=\"app-navbar__button-active\"\n                        to=\"/news\"\n                    > News\n                    </NavLink>\n                </li>}\n                {user && <li className=\"app-navbar__item app-navbar__item-right\">\n                    <span\n                        className=\"app-navbar__button\"\n                        onClick={logOut}\n                    >\n                        Logout\n                    </span>\n                    </li>}\n            </ul>\n        </nav>\n    )\n}\n","/home/localhost/Documents/Code/invest-track/src/components/AppLoader/index.js",[],"/home/localhost/Documents/Code/invest-track/src/components/AppAlert/index.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":9,"nodeType":"111","messageId":"112","endLine":1,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":29,"column":26,"nodeType":"111","messageId":"112","endLine":29,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":57,"column":8,"nodeType":"116","endLine":57,"endColumn":10,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":15,"column":22,"nodeType":"111","messageId":"112","endLine":15,"endColumn":33},{"ruleId":"109","severity":1,"message":"119","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'setPortfelArray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'postRequest' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [authListener]",{"range":"125","text":"126"},[1639,1641],"[authListener]"]